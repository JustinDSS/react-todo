// SETTINGS:
@import "base/settings.colors";
@import "base/settings.z-index";
@import "base/settings.defaults";
@import "base/settings.responsive";
@import "base/base.page";


a, .a {
    cursor: pointer;
    color: $color-blue;
    text-decoration: none;

    &:hover {
        color: $color-blue-dark;
    }
}


.header {
    display: flex;
    flex-flow: row;
    align-items: center;

    padding: 40px 20px 20px 50px;

    .title { font-size: 30px; }

    .add {
        margin-left: auto;
        text-transform: uppercase;

        &:before {
            font-family: FontAwesome;
            padding-right: 5px;
            content: "\f067";
        }
    }
}

.add-container {
    display: flex;
    margin-top: 80px;

    .add-inner {
        margin: auto;

        input {
            outline: none;
            padding: 10px;
            border: 1px solid $color-grey;
            border-radius: 3px;
            width: 100%;
            font-size: 20px;
        }

        span, a {
            display: inline-block;
            width: 50%;
            text-align: center;
            margin-top: 20px;
        }
    }
}

.list-container {
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;

    .radio {
        margin-bottom: 20px;
        margin-right: 20px;
        margin-left: auto;

        label {
            span {
                position: relative;
                width: 100%;
                height: 100%;
                z-index: 1;
                cursor: pointer;
            }

            input {
                position: relative;
                opacity: 0;
                z-index: 2;
            }

            input:checked ~ span {
                color: $color-blue;
            }
        }
    }

    .todo {
        // Since our checkboxs are absolute, we need to be
        // relative otherwise they will be bumped up to the
        // nearest postioned element
        position: relative;

        width: 100%;

        // We want our items to display in a row, so we will
        // Use the new flex display property
        display: flex;
        flex-flow: row;

        padding: 20px;
        cursor: pointer;

        &:hover .text {
            color: $color-blue;
        }

        &:nth-child(even) { background: $color-blue-light; }

        border-top: 1px solid $color-blue;
        &:last-child { border-bottom: 1px solid $color-blue; }

        // Style the icons for the checkmark and remove button
        // Since they are purly cosmetic, display them with CSS
        .complete, .remove {
            &:before {
                font-family: FontAwesome;
                cursor: pointer;
            }

            &.complete:before { content: "\f00c"; }
            &.remove:before { content: "\f00d"; }
        }

        // We want the checkmark to display out of the flow of
        // the document so all the titles will line up. Use
        // Absolute to remove it from the normal flow
        .complete {
            color: $color-blue;
            position: absolute;
            left: 20px;
        }

        // Now, with the checkmark out of the flow, we can set
        // a consistent left margin to make all the text fields
        // line up.
        .text {
            margin-left: 30px;
        }

        .remove {
            margin-left: auto;
            color: $color-red;

            // Make the remove button light by default
            // until you hover over it
            opacity: .1;
            &:hover { opacity: 1; }
        }
    }


}

.completed-graph {
    position: relative;
    top: 2px;
    width: 25px;
    height: 25px;
}
